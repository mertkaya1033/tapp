{"version":3,"sources":["../../node_modules/react-bootstrap/esm/ProgressBar.js","../../node_modules/react-bootstrap/esm/ElementChildren.js","webpack:///../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js?b10b","webpack:///../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js?ecbf","../../src/index.tsx"],"names":["getPercentage","now","min","max","percentage","Math","round","renderProgressBar","_ref","ref","_classNames","label","srOnly","striped","animated","className","style","variant","bsPrefix","props","_objectWithoutPropertiesLoose","React","createElement","_extends","role","classNames","width","ProgressBar","forwardRef","_ref2","isChild","useBootstrapPrefix","children","wrapperProps","func","index","Children","map","child","isValidElement","cloneElement","displayName","defaultProps","_setPrototypeOf","Object","o","p","subClass","superClass","setPrototypeOf","changedArray","a","b","initialState","error","ErrorBoundary","state","updatedWithError","resetErrorBoundary","args","getDerivedStateFromError","reset","this","componentDidCatch","componentDidMount","componentDidUpdate","resetKeys","prevProps","render","fallbackRender","FallbackComponent","fallback","Error","Component","Wrapped","name","setError","givenError"],"mappings":"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","file":"static/js/11.de42e7ef.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nvar ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  var children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  var error = null;\n  React.Children.forEach(children, function (child) {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    var element = /*#__PURE__*/React.createElement(ProgressBar, null);\n    if (child.type === element.type) return;\n    var childType = child.type;\n    var childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(\"Children of \" + componentName + \" can contain only ProgressBar \" + (\"components. Found \" + childIdentifier + \".\"));\n  });\n  return error;\n}\n\nvar defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  srOnly: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  var percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar(_ref, ref) {\n  var _classNames;\n\n  var min = _ref.min,\n      now = _ref.now,\n      max = _ref.max,\n      label = _ref.label,\n      srOnly = _ref.srOnly,\n      striped = _ref.striped,\n      animated = _ref.animated,\n      className = _ref.className,\n      style = _ref.style,\n      variant = _ref.variant,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"className\", \"style\", \"variant\", \"bsPrefix\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, {\n    role: \"progressbar\",\n    className: classNames(className, bsPrefix + \"-bar\", (_classNames = {}, _classNames[\"bg-\" + variant] = variant, _classNames[bsPrefix + \"-bar-animated\"] = animated, _classNames[bsPrefix + \"-bar-striped\"] = animated || striped, _classNames)),\n    style: _extends({\n      width: getPercentage(now, min, max) + \"%\"\n    }, style),\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max\n  }), srOnly ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, label) : label);\n}\n\nvar ProgressBar = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var isChild = _ref2.isChild,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"isChild\"]);\n\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  var min = props.min,\n      now = props.now,\n      max = props.max,\n      label = props.label,\n      srOnly = props.srOnly,\n      striped = props.striped,\n      animated = props.animated,\n      bsPrefix = props.bsPrefix,\n      variant = props.variant,\n      className = props.className,\n      children = props.children,\n      wrapperProps = _objectWithoutPropertiesLoose(props, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"bsPrefix\", \"variant\", \"className\", \"children\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, wrapperProps, {\n    className: classNames(className, bsPrefix)\n  }), children ? map(children, function (child) {\n    return /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    });\n  }) : renderProgressBar({\n    min: min,\n    now: now,\n    max: max,\n    label: label,\n    srOnly: srOnly,\n    striped: striped,\n    animated: animated,\n    bsPrefix: bsPrefix,\n    variant: variant\n  }, ref));\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import * as React from 'react'\n\nconst changedArray = (a: Array<unknown> = [], b: Array<unknown> = []) =>\n  a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]))\n\ninterface FallbackProps {\n  error: Error\n  resetErrorBoundary: (...args: Array<unknown>) => void\n}\n\ninterface ErrorBoundaryPropsWithComponent {\n  onResetKeysChange?: (\n    prevResetKeys: Array<unknown> | undefined,\n    resetKeys: Array<unknown> | undefined,\n  ) => void\n  onReset?: (...args: Array<unknown>) => void\n  onError?: (error: Error, info: {componentStack: string}) => void\n  resetKeys?: Array<unknown>\n  fallback?: never\n  FallbackComponent: React.ComponentType<FallbackProps>\n  fallbackRender?: never\n}\n\ndeclare function FallbackRender(\n  props: FallbackProps,\n): React.ReactElement<\n  unknown,\n  string | React.FunctionComponent | typeof React.Component\n> | null\n\ninterface ErrorBoundaryPropsWithRender {\n  onResetKeysChange?: (\n    prevResetKeys: Array<unknown> | undefined,\n    resetKeys: Array<unknown> | undefined,\n  ) => void\n  onReset?: (...args: Array<unknown>) => void\n  onError?: (error: Error, info: {componentStack: string}) => void\n  resetKeys?: Array<unknown>\n  fallback?: never\n  FallbackComponent?: never\n  fallbackRender: typeof FallbackRender\n}\n\ninterface ErrorBoundaryPropsWithFallback {\n  onResetKeysChange?: (\n    prevResetKeys: Array<unknown> | undefined,\n    resetKeys: Array<unknown> | undefined,\n  ) => void\n  onReset?: (...args: Array<unknown>) => void\n  onError?: (error: Error, info: {componentStack: string}) => void\n  resetKeys?: Array<unknown>\n  fallback: React.ReactElement<\n    unknown,\n    string | React.FunctionComponent | typeof React.Component\n  > | null\n  FallbackComponent?: never\n  fallbackRender?: never\n}\n\ntype ErrorBoundaryProps =\n  | ErrorBoundaryPropsWithFallback\n  | ErrorBoundaryPropsWithComponent\n  | ErrorBoundaryPropsWithRender\n\ntype ErrorBoundaryState = {error: Error | null}\n\nconst initialState: ErrorBoundaryState = {error: null}\n\nclass ErrorBoundary extends React.Component<\n  React.PropsWithRef<React.PropsWithChildren<ErrorBoundaryProps>>,\n  ErrorBoundaryState\n> {\n  static getDerivedStateFromError(error: Error) {\n    return {error}\n  }\n\n  state = initialState\n  updatedWithError = false\n  resetErrorBoundary = (...args: Array<unknown>) => {\n    this.props.onReset?.(...args)\n    this.reset()\n  }\n\n  reset() {\n    this.updatedWithError = false\n    this.setState(initialState)\n  }\n\n  componentDidCatch(error: Error, info: React.ErrorInfo) {\n    this.props.onError?.(error, info)\n  }\n\n  componentDidMount() {\n    const {error} = this.state\n\n    if (error !== null) {\n      this.updatedWithError = true\n    }\n  }\n\n  componentDidUpdate(prevProps: ErrorBoundaryProps) {\n    const {error} = this.state\n    const {resetKeys} = this.props\n\n    // There's an edge case where if the thing that triggered the error\n    // happens to *also* be in the resetKeys array, we'd end up resetting\n    // the error boundary immediately. This would likely trigger a second\n    // error to be thrown.\n    // So we make sure that we don't check the resetKeys on the first call\n    // of cDU after the error is set\n    if (error !== null && !this.updatedWithError) {\n      this.updatedWithError = true\n      return\n    }\n\n    if (error !== null && changedArray(prevProps.resetKeys, resetKeys)) {\n      this.props.onResetKeysChange?.(prevProps.resetKeys, resetKeys)\n      this.reset()\n    }\n  }\n\n  render() {\n    const {error} = this.state\n\n    const {fallbackRender, FallbackComponent, fallback} = this.props\n\n    if (error !== null) {\n      const props = {\n        error,\n        resetErrorBoundary: this.resetErrorBoundary,\n      }\n      if (React.isValidElement(fallback)) {\n        return fallback\n      } else if (typeof fallbackRender === 'function') {\n        return fallbackRender(props)\n      } else if (FallbackComponent) {\n        return <FallbackComponent {...props} />\n      } else {\n        throw new Error(\n          'react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop',\n        )\n      }\n    }\n\n    return this.props.children\n  }\n}\n\nfunction withErrorBoundary<P>(\n  Component: React.ComponentType<P>,\n  errorBoundaryProps: ErrorBoundaryProps,\n): React.ComponentType<P> {\n  const Wrapped: React.ComponentType<P> = props => {\n    return (\n      <ErrorBoundary {...errorBoundaryProps}>\n        <Component {...props} />\n      </ErrorBoundary>\n    )\n  }\n\n  // Format for display in DevTools\n  const name = Component.displayName || Component.name || 'Unknown'\n  Wrapped.displayName = `withErrorBoundary(${name})`\n\n  return Wrapped\n}\n\nfunction useErrorHandler(givenError?: unknown): (error: unknown) => void {\n  const [error, setError] = React.useState<unknown>(null)\n  if (givenError != null) throw givenError\n  if (error != null) throw error\n  return setError\n}\n\nexport {ErrorBoundary, withErrorBoundary, useErrorHandler}\nexport type {\n  FallbackProps,\n  ErrorBoundaryPropsWithComponent,\n  ErrorBoundaryPropsWithRender,\n  ErrorBoundaryPropsWithFallback,\n  ErrorBoundaryProps,\n}\n\n/*\neslint\n  @typescript-eslint/no-throw-literal: \"off\",\n  @typescript-eslint/prefer-nullish-coalescing: \"off\"\n*/\n"],"sourceRoot":""}